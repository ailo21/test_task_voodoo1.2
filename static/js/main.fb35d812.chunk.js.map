{"version":3,"sources":["assets/icon/search.svg","reportWebVitals.ts","api/PostsApi.ts","components/PostsList.tsx","components/Filter.tsx","components/PostsContainer.tsx","index.tsx"],"names":["_path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","instance","axios","create","baseURL","PostService","get","PostsList","posts","className","length","map","post","title","body","author","name","id","_excluded","_extends","Object","assign","target","i","arguments","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgSearch","_ref","svgRef","titleId","props","xmlns","width","height","fill","viewBox","ref","d","ForwardRef","Filter","filter","setFilter","onChange","e","value","placeholder","type","PostsContainer","useState","setPosts","useEffect","fetchPosts","a","getAll","responsePosts","getAuthors","responseAuthor","data","f","userId","r","loadPosts","filteredPosts","useMemo","toLowerCase","includes","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.fb35d812.chunk.js","sourcesContent":["var _path;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgSearch(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: 16,\n    height: 16,\n    fill: \"currentColor\",\n    className: \"bi bi-search\",\n    viewBox: \"0 0 16 16\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M11.742 10.344a6.5 6.5 0 1 0-1.397 1.398h-.001c.03.04.062.078.098.115l3.85 3.85a1 1 0 0 0 1.415-1.414l-3.85-3.85a1.007 1.007 0 0 0-.115-.1zM12 6.5a5.5 5.5 0 1 1-11 0 5.5 5.5 0 0 1 11 0z\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgSearch);\nexport default __webpack_public_path__ + \"static/media/search.35bbb23f.svg\";\nexport { ForwardRef as ReactComponent };","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import axios, {AxiosResponse} from 'axios';\r\nimport {IPost} from \"../models/IPost\";\r\nimport {IAuthor} from \"../models/IAuthor\";\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://jsonplaceholder.typicode.com/'\r\n});\r\n\r\nexport default class PostService {\r\n    static async getAll():Promise<AxiosResponse<IPost[]>> {\r\n        return instance.get<IPost[]>('posts')\r\n    }\r\n    static async  getAuthors():Promise<AxiosResponse<IAuthor[]>>{\r\n        return instance.get<IAuthor[]>('users')\r\n    }\r\n}","import React, {FC} from 'react';\r\nimport {IPost} from \"../models/IPost\";\r\n\r\n\r\nconst PostsList: FC<{ posts: IPost[] }> = ({posts}) => {\r\n\r\n    return (\r\n        <div className={\"container\"}>\r\n            <div className={\"row\"}>\r\n\r\n                {posts.length>0 ? posts.map((post) => {\r\n                    return <div key={post.id} className={\"col-lg-4 col-sm-6 col-xs-12\"}>\r\n                        <div className={\"card mb-3 p-4 post\"}>\r\n                            <h5 className=\"card-title\">{post.title}</h5>\r\n                            <p>{post.body}</p>\r\n                            <div className={\"post_authors\"}>\r\n                                {post.author.name}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                }):<div className={\"text-center p-4\"}><i>Нет постов соответствующих фильтру</i></div>}\r\n            </div>\r\n        </div>\r\n\r\n    );\r\n};\r\n\r\nexport default PostsList;","import React from 'react';\r\nimport {ReactComponent as SearchSvg} from './../assets/icon/search.svg';\r\n\r\n\r\ntype Props = {\r\n    filter: string;\r\n    setFilter: (filterString: string) => void;\r\n}\r\n\r\nconst Filter = ({filter, setFilter}: Props) => {\r\n    return (\r\n        <div className={\"search\"}>\r\n            <div className={\"input-group \"}>\r\n                <span className={\"input-group-text\"}>\r\n                    <SearchSvg/>\r\n                </span>\r\n                <input\r\n                    onChange={e => setFilter(e.target.value)}\r\n                    className={\"form-control\"}\r\n                    placeholder=\"Filter by author...\"\r\n                    value={filter}\r\n                    type=\"text\"/>\r\n            </div>\r\n        </div>\r\n\r\n    );\r\n};\r\n\r\nexport default Filter;","import React, {useEffect, useMemo, useState} from 'react';\r\nimport {IPost} from \"../models/IPost\";\r\nimport PostService from \"../api/PostsApi\";\r\nimport PostsList from \"./PostsList\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport Filter from \"./Filter\";\r\n\r\nconst PostsContainer = () => {\r\n    const [posts, setPosts] = useState<IPost[]>([]);\r\n    const [filter, setFilter] = useState('');\r\n\r\n    function loadPosts() {\r\n        const fetchPosts = async () => {\r\n            const responsePosts = await PostService.getAll();\r\n            const responseAuthor = await PostService.getAuthors();\r\n\r\n            return responsePosts.data.map((post) => {\r\n                post.author = responseAuthor.data.filter(f => f.id === post.userId)[0];\r\n                return post;\r\n            });\r\n        }\r\n        fetchPosts().then((r) => {\r\n            setPosts(r);\r\n        });\r\n    }\r\n\r\n    useEffect(() => {\r\n        loadPosts();\r\n    }, [])\r\n\r\n    const filteredPosts = useMemo(() => {\r\n        if (filter.length > 0) {\r\n            return posts.filter(f => f.author.name.toLowerCase().includes(filter.toLowerCase()));\r\n        }\r\n        return posts;\r\n    }, [filter,posts])\r\n\r\n    return (\r\n        <div className={\"page\"}>\r\n            <Filter filter={filter} setFilter={setFilter}/>\r\n            <PostsList posts={filteredPosts}/>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PostsContainer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './style/App.css';\nimport reportWebVitals from './reportWebVitals';\nimport PostsContainer from \"./components/PostsContainer\";\n\nReactDOM.render(\n      <PostsContainer/>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}